#!/bin/bash

# We are using Bash Strict Mode (see http://redsymbol.net/articles/unofficial-bash-strict-mode/)

set -euo pipefail
IFS=$'\n\t'

# This script checks if all the variables we need for this environment have been set as environment variables.

echo "START - Test if the environment variables have been correctly set"

if [ -z ${TRAVIS_AWS_PROFILE} ]; then
        echo "We have no value for the AWS CLI profile we need to use - Exit with error"
        exit 1
    else
        echo "AWS CLI profile in use is ${TRAVIS_AWS_PROFILE}"
fi

if [ -z ${INSTALLATION_ID} ]; then
        echo "We have no value for the INSTALLATION_ID variable - Exit with error"
        exit 1
    else
        echo "We have a INSTALLATION_ID variable: ${INSTALLATION_ID}"
fi

if [ -z ${STAGE} ]; then
        echo "We have no value for the STAGE variable - Exit with error"
        exit 1
    else
        echo "We have a STAGE variable: ${STAGE}"
fi

if [ -z ${DOMAIN} ]; then
        echo "We have no value for the DOMAIN variable - Exit with error"
        exit 1
    else
        echo "We have a DOMAIN variable: ${DOMAIN}"
fi

if [ -z ${DEFAULT_REGION} ]; then
        echo "We have no value for the DEFAULT_REGION variable - Exit with error"
        exit 1
    else
        echo "We have a DEFAULT_REGION variable: ${DEFAULT_REGION}"
fi

if [ -z ${EMAIL_FOR_NOTIFICATION_GENERIC} ]; then
        echo "We have no value for the EMAIL_FOR_NOTIFICATION_GENERIC variable - Exit with error"
        exit 1
    else
        echo "We have a EMAIL_FOR_NOTIFICATION_GENERIC variable: ${EMAIL_FOR_NOTIFICATION_GENERIC}"
fi

if [ -z ${DEFAULT_SECURITY_GROUP} ]; then
        echo "We have no value for the DEFAULT_SECURITY_GROUP variable - Exit with error"
        exit 1
    else
        echo "We have a DEFAULT_SECURITY_GROUP variable: ${DEFAULT_SECURITY_GROUP}"
fi

echo "END - Test if the environment variables have been correctly set"